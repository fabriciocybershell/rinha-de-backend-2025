
 Network emiliosheinz-go_rinha  Creating
 Network emiliosheinz-go_rinha  Created
 Container emiliosheinz-go-postgres-1  Creating
 Container emiliosheinz-go-redis-1  Creating
 Container emiliosheinz-go-redis-1  Created
 Container emiliosheinz-go-postgres-1  Created
 Container emiliosheinz-go-api02-1  Creating
 Container emiliosheinz-go-api01-1  Creating
 Container emiliosheinz-go-api02-1  Created
 Container emiliosheinz-go-api01-1  Created
 Container emiliosheinz-go-nginx-1  Creating
 Container emiliosheinz-go-nginx-1  Created
Attaching to api01-1, api02-1, nginx-1, postgres-1, redis-1
postgres-1  | The files belonging to this database system will be owned by user "postgres".
postgres-1  | This user must also own the server process.
postgres-1  | 
postgres-1  | The database cluster will be initialized with locale "en_US.utf8".
postgres-1  | The default database encoding has accordingly been set to "UTF8".
postgres-1  | The default text search configuration will be set to "english".
postgres-1  | 
postgres-1  | Data page checksums are disabled.
postgres-1  | 
postgres-1  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres-1  | creating subdirectories ... ok
postgres-1  | selecting dynamic shared memory implementation ... posix
postgres-1  | selecting default "max_connections" ... 100
postgres-1  | selecting default "shared_buffers" ... 128MB
redis-1     | Starting Redis Server
postgres-1  | selecting default time zone ... UTC
redis-1     | 1:C 21 Jul 2025 02:11:20.495 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis-1     | 1:C 21 Jul 2025 02:11:20.495 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis-1     | 1:C 21 Jul 2025 02:11:20.495 * Redis version=8.0.3, bits=64, commit=00000000, modified=1, pid=1, just started
redis-1     | 1:C 21 Jul 2025 02:11:20.495 * Configuration loaded
redis-1     | 1:M 21 Jul 2025 02:11:20.496 * monotonic clock: POSIX clock_gettime
postgres-1  | creating configuration files ... ok
redis-1     | 1:M 21 Jul 2025 02:11:20.499 * Running mode=standalone, port=6379.
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> RedisBloom version 8.0.1 (Git=unknown)
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> Registering configuration options: [
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ bf-error-rate       :      0.01 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ bf-initial-size     :       100 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ bf-expansion-factor :         2 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ cf-bucket-size      :         2 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ cf-initial-size     :      1024 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ cf-max-iterations   :        20 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ cf-expansion-factor :         1 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> 	{ cf-max-expansions   :        32 }
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * <bf> ]
redis-1     | 1:M 21 Jul 2025 02:11:20.507 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Redis version found by RedisSearch : 8.0.3 - oss
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> RediSearch version 8.0.1 (Git=5688fcc)
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Low level api version 1 initialized successfully
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Initialized thread pools!
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Disabled workers threadpool of size 0
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Subscribe to config changes
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Enabled role change notification
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
redis-1     | 1:M 21 Jul 2025 02:11:20.728 * <search> Register write commands
redis-1     | 1:M 21 Jul 2025 02:11:20.729 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis-1     | 1:M 21 Jul 2025 02:11:20.729 * <timeseries> RedisTimeSeries version 80001, git_sha=577bfa8b5909e7ee572f0b651399be8303dc6641
redis-1     | 1:M 21 Jul 2025 02:11:20.729 * <timeseries> Redis version found by RedisTimeSeries : 8.0.3 - oss
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> Registering configuration options: [
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-compaction-policy   :              }
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-num-threads         :            3 }
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-retention-policy    :            0 }
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-encoding            :   compressed }
redis-1     | 1:M 21 Jul 2025 02:11:20.734 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis-1     | 1:M 21 Jul 2025 02:11:20.735 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis-1     | 1:M 21 Jul 2025 02:11:20.735 * <timeseries> ]
redis-1     | 1:M 21 Jul 2025 02:11:20.735 * <timeseries> Detected redis oss
redis-1     | 1:M 21 Jul 2025 02:11:20.735 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis-1     | 1:M 21 Jul 2025 02:11:20.749 * <ReJSON> Created new data type 'ReJSON-RL'
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> version: 80001 git sha: unknown branch: unknown
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Exported RedisJSON_V1 API
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Exported RedisJSON_V2 API
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Exported RedisJSON_V3 API
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Exported RedisJSON_V4 API
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Exported RedisJSON_V5 API
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Enabled diskless replication
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <ReJSON> Initialized shared string cache, thread safe: false.
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * <search> Acquired RedisJSON_V5 API
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * Server initialized
redis-1     | 1:M 21 Jul 2025 02:11:20.752 * Ready to accept connections tcp
postgres-1  | running bootstrap script ... ok
postgres-1  | sh: locale: not found
postgres-1  | 2025-07-21 02:11:22.889 UTC [37] WARNING:  no usable system locales were found
postgres-1  | performing post-bootstrap initialization ... ok
postgres-1  | initdb: warning: enabling "trust" authentication for local connections
postgres-1  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
postgres-1  | syncing data to disk ... ok
postgres-1  | 
postgres-1  | 
postgres-1  | Success. You can now start the database server using:
postgres-1  | 
postgres-1  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres-1  | 
postgres-1  | waiting for server to start....2025-07-21 02:11:26.008 UTC [55] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
postgres-1  | 2025-07-21 02:11:26.014 UTC [55] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres-1  | 2025-07-21 02:11:26.031 UTC [58] LOG:  database system was shut down at 2025-07-21 02:11:25 UTC
postgres-1  | 2025-07-21 02:11:26.041 UTC [55] LOG:  database system is ready to accept connections
postgres-1  |  done
postgres-1  | server started
postgres-1  | CREATE DATABASE
postgres-1  | 
postgres-1  | 
postgres-1  | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/script.sql
postgres-1  | psql:/docker-entrypoint-initdb.d/script.sql:1: NOTICE:  table "payments" does not exist, skipping
postgres-1  | DROP TABLE
postgres-1  | CREATE TYPE
postgres-1  | CREATE TABLE
postgres-1  | 
postgres-1  | 
postgres-1  | waiting for server to shut down....2025-07-21 02:11:26.592 UTC [55] LOG:  received fast shutdown request
postgres-1  | 2025-07-21 02:11:26.681 UTC [55] LOG:  aborting any active transactions
postgres-1  | 2025-07-21 02:11:26.685 UTC [55] LOG:  background worker "logical replication launcher" (PID 61) exited with exit code 1
postgres-1  | 2025-07-21 02:11:26.781 UTC [56] LOG:  shutting down
postgres-1  | 2025-07-21 02:11:26.788 UTC [75] FATAL:  the database system is shutting down
postgres-1  | 2025-07-21 02:11:26.788 UTC [56] LOG:  checkpoint starting: shutdown immediate
postgres-1  | 2025-07-21 02:11:26.962 UTC [56] LOG:  checkpoint complete: wrote 937 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.099 s, sync=0.044 s, total=0.181 s; sync files=304, longest=0.019 s, average=0.001 s; distance=4276 kB, estimate=4276 kB; lsn=0/191A508, redo lsn=0/191A508
postgres-1  | 2025-07-21 02:11:26.970 UTC [55] LOG:  database system is shut down
postgres-1  |  done
postgres-1  | server stopped
postgres-1  | 
postgres-1  | PostgreSQL init process complete; ready for start up.
postgres-1  | 
postgres-1  | 2025-07-21 02:11:27.084 UTC [1] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
postgres-1  | 2025-07-21 02:11:27.085 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres-1  | 2025-07-21 02:11:27.085 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres-1  | 2025-07-21 02:11:27.096 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres-1  | 2025-07-21 02:11:27.113 UTC [79] LOG:  database system was shut down at 2025-07-21 02:11:26 UTC
postgres-1  | 2025-07-21 02:11:27.123 UTC [1] LOG:  database system is ready to accept connections
api01-1     | 2025/07/21 02:11:29 Configuration initialized successfully
api01-1     | Database connection established successfully
api01-1     | 2025/07/21 02:11:29 Default health status initialized for default: &{Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:11:29 Default health status initialized for fallback: &{Failing:false MinResponseTime:0}
api01-1     | asynq: pid=1 2025/07/21 02:11:29.294255 INFO: Starting processing
api01-1     | asynq: pid=1 2025/07/21 02:11:29.294280 INFO: Send signal TSTP to stop processing new tasks
api01-1     | asynq: pid=1 2025/07/21 02:11:29.294283 INFO: Send signal TERM or INT to terminate the process
api02-1     | 2025/07/21 02:11:29 Configuration initialized successfully
api02-1     | Database connection established successfully
api02-1     | asynq: pid=1 2025/07/21 02:11:29.342969 INFO: Starting processing
api02-1     | asynq: pid=1 2025/07/21 02:11:29.343020 INFO: Send signal TSTP to stop processing new tasks
api02-1     | asynq: pid=1 2025/07/21 02:11:29.343024 INFO: Send signal TERM or INT to terminate the process
nginx-1     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx-1     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx-1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
nginx-1     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx-1     | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx-1     | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx-1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx-1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx-1     | /docker-entrypoint.sh: Configuration complete; ready for start up
api01-1     | 2025/07/21 02:11:39 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:11:39 Not the leader.
api01-1     | 2025/07/21 02:11:44 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:11:44 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:11:49 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:11:49 Not the leader.
api01-1     | 2025/07/21 02:11:49 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:11:49 Health check for fallback OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:11:54 Health check for default OK: {Failing:false MinResponseTime:100}
api01-1     | 2025/07/21 02:11:54 Health check for fallback OK: {Failing:false MinResponseTime:0}
postgres-1  | 2025-07-21 02:11:58.885 UTC [382] LOG:  could not send data to client: Broken pipe
postgres-1  | 2025-07-21 02:11:58.885 UTC [382] FATAL:  connection to client lost
postgres-1  | 2025-07-21 02:11:58.886 UTC [402] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.289 UTC [362] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:57.903 UTC [342] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.500 UTC [399] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:57.902 UTC [363] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.589 UTC [400] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.290 UTC [392] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.485 UTC [389] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.498 UTC [396] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.288 UTC [401] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.587 UTC [385] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:58.684 UTC [384] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.287 UTC [397] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:11:59 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:11:59 Not the leader.
api01-1     | 2025/07/21 02:11:59 Health check for default OK: {Failing:false MinResponseTime:100}
postgres-1  | 2025-07-21 02:11:59.484 UTC [405] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:11:59 Health check for fallback OK: {Failing:false MinResponseTime:0}
postgres-1  | 2025-07-21 02:11:59.785 UTC [411] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.791 UTC [429] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.801 UTC [404] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.984 UTC [428] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.985 UTC [426] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.986 UTC [425] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:11:59.986 UTC [427] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.387 UTC [406] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.387 UTC [407] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.397 UTC [452] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.482 UTC [412] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.489 UTC [423] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.489 UTC [417] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.490 UTC [420] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.490 UTC [419] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.491 UTC [414] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.492 UTC [416] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.492 UTC [415] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:00.494 UTC [418] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:03.184 UTC [462] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:03.184 UTC [479] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:03.184 UTC [475] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:03.197 UTC [489] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:03.383 UTC [490] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:03 Setting fallback as failing
api01-1     | 2025/07/21 02:12:03 Setting fallback as failing
api01-1     | 2025/07/21 02:12:03 Setting fallback as failing
api02-1     | 2025/07/21 02:12:03 Setting fallback as failing
api02-1     | 2025/07/21 02:12:03 Setting fallback as failing
postgres-1  | 2025-07-21 02:12:03.584 UTC [466] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:03 Setting default as failing
api01-1     | 2025/07/21 02:12:04 Health check for default OK: {Failing:true MinResponseTime:100}
api01-1     | 2025/07/21 02:12:04 Health check for fallback OK: {Failing:false MinResponseTime:0}
postgres-1  | 2025-07-21 02:12:05.083 UTC [455] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.083 UTC [456] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.087 UTC [496] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.208 UTC [495] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.285 UTC [498] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:05 Setting fallback as failing
postgres-1  | 2025-07-21 02:12:05.493 UTC [494] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.495 UTC [508] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.591 UTC [437] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.594 UTC [502] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.594 UTC [499] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.686 UTC [438] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.882 UTC [505] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.882 UTC [500] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.883 UTC [451] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.884 UTC [497] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.890 UTC [504] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.892 UTC [463] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.988 UTC [506] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:05.991 UTC [510] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:09 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:12:09 Not the leader.
api01-1     | 2025/07/21 02:12:09 Health check for default OK: {Failing:true MinResponseTime:2000}
api01-1     | 2025/07/21 02:12:09 Health check for fallback OK: {Failing:true MinResponseTime:1000}
postgres-1  | 2025-07-21 02:12:11.093 UTC [517] LOG:  could not send data to client: Broken pipe
postgres-1  | 2025-07-21 02:12:11.093 UTC [517] FATAL:  connection to client lost
api01-1     | 2025/07/21 02:12:14 Health check for default OK: {Failing:true MinResponseTime:2000}
api01-1     | 2025/07/21 02:12:14 Health check for fallback OK: {Failing:true MinResponseTime:1000}
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585386 WARN: Could not move task id=e9794b08-0f16-4035-927a-af45190ca355 from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585403 WARN: Could not move task id=43da0fbe-df6c-4c45-9525-b1a9e9b34b7a from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585424 WARN: Could not move task id=1c285ebe-64fc-4e79-b36d-3cf6aa4a47f5 from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585437 WARN: Could not move task id=5f6a6deb-eae1-4dc0-a96e-5e3ae5dedda1 from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585386 WARN: Could not move task id=72224d9b-75dd-422c-9c42-bb57c72d1369 from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585499 WARN: Could not move task id=8401eda2-1201-48c0-92fc-fd7f188edf0d from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585760 WARN: Could not move task id=276e01e0-055f-450d-9284-416b7e09bc5e from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.585946 WARN: Could not move task id=48df171c-c5bb-4ec1-97e1-0a9b1d27a084 from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:15.586050 WARN: Could not move task id=4807d93e-2140-4500-a98c-1906bb5f2da5 from "asynq:{default}:active" to "asynq:{default}:retry"; Will retry syncing
api01-1     | 2025/07/21 02:12:19 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:12:19 Not the leader.
api01-1     | 2025/07/21 02:12:19 Health check for default OK: {Failing:false MinResponseTime:20}
api01-1     | 2025/07/21 02:12:19 Health check for fallback OK: {Failing:false MinResponseTime:20}
api01-1     | 2025/07/21 02:12:24 Health check for default OK: {Failing:false MinResponseTime:20}
api01-1     | 2025/07/21 02:12:24 Health check for fallback OK: {Failing:false MinResponseTime:20}
api02-1     | asynq: pid=1 2025/07/21 02:12:25.196967 WARN: Could not remove task id=b16d654d-acdb-44a2-ae24-5296a6baebf7 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:25.199727 WARN: Could not remove task id=7c6340b3-7dbe-429d-9fe0-b8045c27daf7 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: i/o timeout; Will retry syncing
postgres-1  | 2025-07-21 02:12:27.483 UTC [728] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:27.483 UTC [727] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:27.746 UTC [729] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:27.987 UTC [721] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:28.083 UTC [718] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:28.200 UTC [738] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:28.284 UTC [742] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:28.284 UTC [741] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:29 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:12:29 Not the leader.
api01-1     | 2025/07/21 02:12:29 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | asynq: pid=1 2025/07/21 02:12:29.989124 WARN: Could not remove task id=6d9d5d53-5cae-4bab-b232-496da1dcfa34 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api01-1     | asynq: pid=1 2025/07/21 02:12:29.989183 WARN: Could not remove task id=f4b5ed73-cb1c-48a3-a19c-f7da46ebb149 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api01-1     | asynq: pid=1 2025/07/21 02:12:29.989575 WARN: Could not remove task id=4c1a2591-43e5-4819-bc5b-7719e608c8de type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api01-1     | asynq: pid=1 2025/07/21 02:12:29.989969 WARN: Could not remove task id=2c554f00-d5d3-47df-a525-f064e94b3527 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:29.990606 WARN: Could not remove task id=f88eac32-8eaf-4cfd-ad7b-1d3e784683ed type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02-1     | asynq: pid=1 2025/07/21 02:12:29.990667 WARN: Could not remove task id=110501aa-2d70-4f41-a580-cf8540667f3f type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api01-1     | 2025/07/21 02:12:29 Health check for fallback OK: {Failing:false MinResponseTime:5000}
postgres-1  | 2025-07-21 02:12:31.887 UTC [768] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:31.887 UTC [767] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:31.887 UTC [769] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.388 UTC [782] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.388 UTC [747] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.388 UTC [766] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.590 UTC [773] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.593 UTC [784] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.621 UTC [757] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.685 UTC [775] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.783 UTC [790] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.792 UTC [785] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.792 UTC [739] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.792 UTC [739] LOG:  could not send data to client: Broken pipe
postgres-1  | 2025-07-21 02:12:32.795 UTC [786] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.884 UTC [758] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.885 UTC [787] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:32.891 UTC [750] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.088 UTC [723] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.093 UTC [789] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.189 UTC [774] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.191 UTC [744] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.291 UTC [731] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.482 UTC [788] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.483 UTC [761] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.484 UTC [764] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.485 UTC [791] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.485 UTC [770] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.486 UTC [743] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.490 UTC [745] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.583 UTC [793] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.584 UTC [794] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.584 UTC [756] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:31.891 UTC [760] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.686 UTC [796] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.783 UTC [783] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.784 UTC [792] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.785 UTC [795] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.785 UTC [797] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.883 UTC [772] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:33.885 UTC [798] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.185 UTC [765] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.198 UTC [759] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.203 UTC [724] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:27.485 UTC [726] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.284 UTC [800] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.294 UTC [801] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.485 UTC [748] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.585 UTC [740] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.684 UTC [808] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.685 UTC [807] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.685 UTC [804] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:34.783 UTC [806] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:34 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:12:34 Health check for fallback OK: {Failing:false MinResponseTime:5000}
postgres-1  | 2025-07-21 02:12:36.692 UTC [836] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:36.783 UTC [842] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:37.000 UTC [846] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:37.084 UTC [844] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:37.086 UTC [840] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:37.196 UTC [847] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:38.885 UTC [872] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:38.886 UTC [874] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.009 UTC [862] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.009 UTC [861] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.188 UTC [852] LOG:  could not send data to client: Broken pipe
postgres-1  | 2025-07-21 02:12:39.188 UTC [852] FATAL:  connection to client lost
api01-1     | 2025/07/21 02:12:39 Acting as leader. Ensuring health checks are running.
postgres-1  | 2025-07-21 02:12:39.296 UTC [864] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.298 UTC [865] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.300 UTC [863] FATAL:  sorry, too many clients already
api02-1     | 2025/07/21 02:12:39 Not the leader.
postgres-1  | 2025-07-21 02:12:39.397 UTC [857] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.510 UTC [884] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.591 UTC [891] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.784 UTC [893] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.785 UTC [890] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.882 UTC [892] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:39.889 UTC [886] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:39 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:12:39 Health check for fallback OK: {Failing:false MinResponseTime:5000}
postgres-1  | 2025-07-21 02:12:39.986 UTC [859] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:40.883 UTC [899] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:40.985 UTC [901] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.184 UTC [902] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.394 UTC [900] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.485 UTC [915] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.682 UTC [913] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.685 UTC [912] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.686 UTC [918] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.687 UTC [909] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.695 UTC [914] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.783 UTC [917] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.789 UTC [911] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:41.791 UTC [916] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:44 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:12:45 Health check for fallback OK: {Failing:false MinResponseTime:5000}
[Knginx-1 exited with code 0
api02-1     | asynq: pid=1 2025/07/21 02:12:47.289103 INFO: Stopping processor
api02-1     | asynq: pid=1 2025/07/21 02:12:47.289136 INFO: Processor stopped
api02-1     | asynq: pid=1 2025/07/21 02:12:47.289140 INFO: Starting graceful shutdown
api02-1     | asynq: pid=1 2025/07/21 02:12:47.289145 INFO: Waiting for all workers to finish...
api01-1     | asynq: pid=1 2025/07/21 02:12:47.290772 INFO: Stopping processor
api01-1     | asynq: pid=1 2025/07/21 02:12:47.290804 INFO: Processor stopped
api01-1     | asynq: pid=1 2025/07/21 02:12:47.290807 INFO: Starting graceful shutdown
api01-1     | asynq: pid=1 2025/07/21 02:12:47.290815 INFO: Waiting for all workers to finish...
postgres-1  | 2025-07-21 02:12:47.385 UTC [963] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.988 UTC [957] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.982 UTC [976] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.789 UTC [974] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.789 UTC [972] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.889 UTC [965] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.882 UTC [970] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.783 UTC [966] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.887 UTC [961] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.982 UTC [955] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.884 UTC [984] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.785 UTC [968] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.788 UTC [973] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.784 UTC [962] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.887 UTC [978] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.884 UTC [988] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.885 UTC [989] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.791 UTC [985] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.882 UTC [971] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.883 UTC [975] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.883 UTC [986] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.884 UTC [983] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.786 UTC [969] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.785 UTC [967] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.883 UTC [982] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.885 UTC [990] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.884 UTC [987] FATAL:  sorry, too many clients already
postgres-1  | 2025-07-21 02:12:47.887 UTC [977] FATAL:  sorry, too many clients already
api01-1     | 2025/07/21 02:12:49 Acting as leader. Ensuring health checks are running.
api02-1     | 2025/07/21 02:12:49 Not the leader.
api02-1     | asynq: pid=1 2025/07/21 02:12:49.382686 INFO: All workers have finished
api02-1     | asynq: pid=1 2025/07/21 02:12:49.382761 ERROR: Could not remove task id=b16d654d-acdb-44a2-ae24-5296a6baebf7 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02-1     | asynq: pid=1 2025/07/21 02:12:49.382773 ERROR: Could not remove task id=7c6340b3-7dbe-429d-9fe0-b8045c27daf7 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: i/o timeout
api02-1     | asynq: pid=1 2025/07/21 02:12:49.382781 ERROR: Could not remove task id=f88eac32-8eaf-4cfd-ad7b-1d3e784683ed type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02-1     | asynq: pid=1 2025/07/21 02:12:49.382789 ERROR: Could not remove task id=110501aa-2d70-4f41-a580-cf8540667f3f type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02-1     | asynq: pid=1 2025/07/21 02:12:49.383177 INFO: Exiting
postgres-1  | 2025-07-21 02:12:47.885 UTC [981] FATAL:  sorry, too many clients already
api01-1     | asynq: pid=1 2025/07/21 02:12:49.686366 INFO: All workers have finished
api01-1     | asynq: pid=1 2025/07/21 02:12:49.686413 ERROR: Could not remove task id=6d9d5d53-5cae-4bab-b232-496da1dcfa34 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api01-1     | asynq: pid=1 2025/07/21 02:12:49.686424 ERROR: Could not remove task id=f4b5ed73-cb1c-48a3-a19c-f7da46ebb149 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api01-1     | asynq: pid=1 2025/07/21 02:12:49.686430 ERROR: Could not remove task id=4c1a2591-43e5-4819-bc5b-7719e608c8de type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api01-1     | asynq: pid=1 2025/07/21 02:12:49.686442 ERROR: Could not remove task id=2c554f00-d5d3-47df-a525-f064e94b3527 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api01-1     | asynq: pid=1 2025/07/21 02:12:49.686705 INFO: Exiting
api01-1     | 2025/07/21 02:12:49 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:12:50 Health check for fallback OK: {Failing:false MinResponseTime:5000}
api01-1     | 2025/07/21 02:12:55 Health check for default OK: {Failing:false MinResponseTime:0}
api01-1     | 2025/07/21 02:12:55 Health check for fallback OK: {Failing:false MinResponseTime:5000}
[Kapi01-1 exited with code 137
[Kapi02-1 exited with code 137
redis-1     | 1:signal-handler (1753063977) Received SIGTERM scheduling shutdown...
postgres-1  | 2025-07-21 02:12:57.990 UTC [1] LOG:  received fast shutdown request
redis-1     | 1:M 21 Jul 2025 02:12:57.996 * User requested shutdown...
redis-1     | 1:M 21 Jul 2025 02:12:58.081 # Redis is now ready to exit, bye bye...
postgres-1  | 2025-07-21 02:12:58.181 UTC [1] LOG:  aborting any active transactions
[Kredis-1 exited with code 0
postgres-1  | 2025-07-21 02:12:58.490 UTC [1] LOG:  background worker "logical replication launcher" (PID 82) exited with exit code 1
postgres-1  | 2025-07-21 02:12:58.493 UTC [77] LOG:  shutting down
postgres-1  | 2025-07-21 02:12:58.509 UTC [77] LOG:  checkpoint starting: shutdown immediate
postgres-1  | 2025-07-21 02:12:58.643 UTC [77] LOG:  checkpoint complete: wrote 308 buffers (1.9%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.083 s, sync=0.023 s, total=0.150 s; sync files=29, longest=0.015 s, average=0.001 s; distance=2325 kB, estimate=2325 kB; lsn=0/1B5FB08, redo lsn=0/1B5FB08
postgres-1  | 2025-07-21 02:12:58.688 UTC [1] LOG:  database system is shut down
[Kpostgres-1 exited with code 0
log truncated at line 1000
